<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team2.mapper.NoticeMapper">


    <!-- 메인 배너에 노출될 메인 공지 1건 가져오기 -->
    <select id="getMainNotice" resultType="com.team2.dto.notice.NoticeDTO">
        SELECT
            NOTICE_ID AS noticeId,
            WRITER_ADMIN_ID AS writerAdminId,
            NOTICE_TITLE AS title,
            NOTICE_DETAIL AS content,
            POSTED_AT AS postedAt,
            UPDATED_AT AS updatedAt,
            UPDATED_BY AS updatedBy,
            NOTICE_STATUS AS noticeStatus,
            IS_MAIN AS isMain,
            PRIORITY AS priority,
            IS_NEED_PIN AS isNeedPin,
            VIEW_COUNT AS viewCount
        FROM NOTICE
        WHERE IS_MAIN = 1
          AND NOTICE_STATUS = 'ACT'
        ORDER BY POSTED_AT DESC
            LIMIT 1
    </select>




    <select id="getNoticeDetail" parameterType="int" resultType="com.team2.dto.notice.NoticeDTO">
        SELECT
            NOTICE_ID AS noticeId,
            WRITER_ADMIN_ID AS writerAdminId,
            NOTICE_TITLE AS title,
            NOTICE_DETAIL AS content,
            POSTED_AT AS postedAt,
            UPDATED_AT AS updatedAt,
            UPDATED_BY AS updatedBy,
            NOTICE_STATUS AS noticeStatus,
            IS_MAIN AS isMain,
            PRIORITY AS priority,
            IS_NEED_PIN AS isNeedPin,
            VIEW_COUNT AS viewCount
        FROM NOTICE
        WHERE NOTICE_ID = #{noticeId}
    </select>

    <!-- 공지사항 등록 -->
    <insert id="insertNotice" parameterType="com.team2.dto.notice.NoticeDTO" useGeneratedKeys="true" keyProperty="noticeId">
        INSERT INTO NOTICE
        (WRITER_ADMIN_ID, NOTICE_TITLE, NOTICE_DETAIL, IS_MAIN, IS_NEED_PIN, PRIORITY, NOTICE_STATUS, POSTED_AT)
        VALUES
            (#{writerAdminId}, #{title}, #{content}, #{isMain}, #{isNeedPin}, #{priority}, #{noticeStatus}, NOW())
    </insert>

    <!--메인노출 공지 작성시 기존 노출공지 비활성-->
    <update id="unsetMainNotice">
        UPDATE NOTICE
        SET IS_MAIN = 0
        WHERE IS_MAIN = 1
    </update>

    <!-- 공지사항 수정 -->
    <update id="updateNotice" parameterType="com.team2.dto.notice.NoticeDTO">
        UPDATE NOTICE
        SET
            NOTICE_TITLE = #{title},
            NOTICE_DETAIL = #{content},
            UPDATED_AT = #{updatedAt},
            UPDATED_BY = #{updatedBy},
            NOTICE_STATUS = #{noticeStatus},
            IS_MAIN = #{isMain},
            PRIORITY = #{priority},
            IS_NEED_PIN = #{isNeedPin}
        WHERE NOTICE_ID = #{noticeId}
    </update>

    <!-- 공지사항 삭제 DB삭제 안하고 상태 업데이트로 뷰에 표기 안하기 위함 -->
    <update id="noticeDeleted">
        UPDATE NOTICE
        SET NOTICE_STATUS = 'DEL',
            UPDATED_AT = NOW(),
            UPDATED_BY = #{adminId}
        WHERE NOTICE_ID = #{noticeId}
    </update>

    <!-- 전체 공지 개수 조회 - getNoticeList와 동일한 조건 적용 -->
    <select id="countNotices" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM NOTICE
        <where>
            <!-- 🔥 추가: getNoticeList와 동일한 조건 -->
            IS_NEED_PIN = 0 AND IS_MAIN = 0

            <choose>
                <when test="isAdmin == false">
                    AND NOTICE_STATUS = 'ACT'
                </when>
                <otherwise>
                    AND NOTICE_STATUS != 'DEL'
                </otherwise>
            </choose>

            <if test="keyword != null and keyword != ''">
                AND (
                NOTICE_TITLE LIKE CONCAT('%', #{keyword}, '%')
                OR NOTICE_DETAIL LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
    </select>


    <!-- 상단 고정 공지 (메인공지 + 상단공지) -->
    <select id="getPinnedNotices" resultType="com.team2.dto.notice.NoticeDTO">
        SELECT
            NOTICE_ID AS noticeId,
            WRITER_ADMIN_ID AS writerAdminId,
            NOTICE_TITLE AS title,
            NOTICE_DETAIL AS content,
            POSTED_AT AS postedAt,
            UPDATED_AT AS updatedAt,
            UPDATED_BY AS updatedBy,
            NOTICE_STATUS AS noticeStatus,
            IS_MAIN AS isMain,
            PRIORITY AS priority,
            IS_NEED_PIN AS isNeedPin,
            VIEW_COUNT AS viewCount
        FROM NOTICE
        WHERE (IS_MAIN = 1 OR IS_NEED_PIN = 1)
          AND NOTICE_STATUS = 'ACT'
          AND NOTICE_STATUS != 'DEL'
        ORDER BY PRIORITY ASC, POSTED_AT DESC
    </select>




    <!-- ✅ 일반 공지 목록: IS_NEED_PIN = 0 (고정되지 않은 공지 전용) -->
    <select id="getNoticeList" parameterType="map" resultType="com.team2.dto.notice.NoticeDTO">
        SELECT
        NOTICE_ID AS noticeId,
        WRITER_ADMIN_ID AS writerAdminId,
        NOTICE_TITLE AS title,
        NOTICE_DETAIL AS content,
        POSTED_AT AS postedAt,
        UPDATED_AT AS updatedAt,
        UPDATED_BY AS updatedBy,
        NOTICE_STATUS AS noticeStatus,
        IS_MAIN AS isMain,
        PRIORITY AS priority,
        IS_NEED_PIN AS isNeedPin,
        VIEW_COUNT AS viewCount
        FROM NOTICE
        WHERE IS_NEED_PIN = 0
        AND IS_MAIN = 0
        <if test="isAdmin == false">
            AND NOTICE_STATUS = 'ACT'
        </if>
        <if test="isAdmin == true">
        AND NOTICE_STATUS != 'DEL'
    </if>
        <if test="keyword != null and keyword.trim() != ''">
            AND (NOTICE_TITLE LIKE CONCAT('%', #{keyword}, '%')
            OR NOTICE_DETAIL LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        ORDER BY POSTED_AT DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>
<!--조회수 증가 쿼리 -->
    <update id="updateViewCount" parameterType="int">
        UPDATE NOTICE
        SET VIEW_COUNT = VIEW_COUNT + 1
        WHERE NOTICE_ID = #{noticeId}
    </update>


    <!-- 공지사항 상세 하단에 이전글 다음글 -->
    <!-- ✅ 이전글 -->
    <select id="findPreviousNotice" resultType="com.team2.dto.notice.NoticeDTO">
    <![CDATA[
        SELECT notice_id, NOTICE_TITLE AS title
        FROM notice
        WHERE notice_id < #{noticeId}
          AND notice_status != 'DEL'
        ORDER BY notice_id DESC
            LIMIT 1
        ]]>
</select>

    <!-- ✅ 다음글 -->
    <select id="findNextNotice" resultType="com.team2.dto.notice.NoticeDTO">
    <![CDATA[
        SELECT notice_id, NOTICE_TITLE AS title
        FROM notice
        WHERE notice_id > #{noticeId}
          AND notice_status != 'DEL'
        ORDER BY notice_id ASC
            LIMIT 1
        ]]>
</select>




</mapper>
