<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team2.mapper.order.OrderMapper">

    <!-- Order 기본정보 저장 -->
    <insert id="insertOrder" parameterType="com.team2.dto.order.OrderDTO" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO RESERVE (RESERVER_ID, ROOM_ID, CHECK_IN_AT, CHECK_OUT_DATE, RESERVE_STATUS_ID, 
                           IS_CANCELABLE, RESERVE_DATE, CREATED_AT)
        VALUES (#{customerId}, #{roomId}, #{checkInAt}, #{checkOutDate}, 1, 1, NOW(), NOW())
    </insert>

    <!-- OrderItem 저장 -->
    <insert id="insertOrderItem" parameterType="com.team2.dto.order.OrderItemDTO" useGeneratedKeys="true" keyProperty="itemId">
        INSERT INTO PAYMENT (RESERVE_ID, PAYMENT_OPTION_ID, PAYMENT_STATUS_ID, PRICE, 
                           BASE_PRICE, IS_REFUNDABLE, CREATED_AT)
        VALUES (#{orderId}, 1, 1, #{price}, #{price}, 1, NOW())
    </insert>

    <!-- 고객 ID 로 주문 목록 -->
    <select id="selectOrdersByCustomerId" parameterType="int" resultType="com.team2.dto.order.OrderDTO">
        SELECT r.RESERVE_ID AS orderId,
               r.RESERVER_ID AS customerId,
               p.PRICE AS totalPrice,
               CASE 
                   WHEN p.PAYMENT_STATUS_ID = 1 THEN 'COMPLETED'
                   ELSE 'PENDING'
               END AS status,
               r.RESERVE_DATE AS orderDate
        FROM RESERVE r
        LEFT JOIN PAYMENT p ON r.RESERVE_ID = p.RESERVE_ID
        WHERE r.RESERVER_ID = #{customerId}
        ORDER BY r.RESERVE_DATE DESC
    </select>

    <!-- 주문 단건 -->
    <select id="selectOrderById" parameterType="int" resultType="com.team2.dto.order.OrderDTO">
        SELECT r.RESERVE_ID AS orderId,
               r.RESERVER_ID AS customerId,
               p.PRICE AS totalPrice,
               CASE 
                   WHEN p.PAYMENT_STATUS_ID = 1 THEN 'COMPLETED'
                   ELSE 'PENDING'
               END AS status,
               r.RESERVE_DATE AS orderDate
        FROM RESERVE r
        LEFT JOIN PAYMENT p ON r.RESERVE_ID = p.RESERVE_ID
        WHERE r.RESERVE_ID = #{orderId}
    </select>

    <!-- 주문의 아이템 목록 -->
    <select id="selectOrderItems" parameterType="int" resultType="com.team2.dto.order.OrderItemDTO">
        SELECT p.PAYMENT_ID AS itemId,
               r.RESERVE_ID AS orderId,
               rm.ROOM_ID AS accommId,
               rm.ROOM_NAME AS roomName,
               p.PRICE AS price,
               1 AS quantity,
               a.ACCOMMODATION_ID AS accommodationId,
               a.ACCOMMODATION_NAME AS accommodationName,
               r.CHECK_IN_AT AS checkInAt,
               r.CHECK_OUT_DATE AS checkOutDate,
               r.RESERVE_ID AS reserveId
        FROM RESERVE r
        LEFT JOIN PAYMENT p ON r.RESERVE_ID = p.RESERVE_ID
        LEFT JOIN ROOM rm ON r.ROOM_ID = rm.ROOM_ID
        LEFT JOIN ACCOMMODATION a ON rm.ACCOMMODATION_ID = a.ACCOMMODATION_ID
        WHERE r.RESERVE_ID = #{orderId}
    </select>

</mapper> 