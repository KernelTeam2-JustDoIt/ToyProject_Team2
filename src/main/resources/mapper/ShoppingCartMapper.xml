<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team2.mapper.ShoppingCartMapper">

    <resultMap id="cartItemMap" type="com.team2.dto.order.ShoppingCartItemDTO">
        <id property="cartId" column="cart_id"/>
        <result property="roomId" column="room_id"/>
        <result property="customerId" column="customer_id"/>
        <result property="desiredCheckInAt" column="desired_check_in_at"/>
        <result property="desiredCheckOutAt" column="desired_check_out_at"/>
        <result property="adultCount" column="adult_count"/>
        <result property="childCount" column="child_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="roomName" column="room_name"/>
        <result property="price" column="price"/>
    </resultMap>

    <select id="selectCartItemsByCustomer" parameterType="int" resultMap="cartItemMap">
        SELECT sc.cart_id,
               sc.room_id,
               sc.customer_id,
               sc.desired_check_in_at,
               sc.desired_check_out_at,
               sc.adult_count,
               sc.child_count,
               sc.created_at,
               r.room_name,
               r.price
        FROM shopping_cart sc
                 JOIN room r ON sc.room_id = r.room_id
        WHERE sc.customer_id = #{customerId}
        ORDER BY sc.created_at DESC
    </select>

    <select id="selectById" parameterType="int" resultMap="cartItemMap">
        SELECT sc.cart_id,
               sc.room_id,
               sc.customer_id,
               sc.desired_check_in_at,
               sc.desired_check_out_at,
               sc.adult_count,
               sc.child_count,
               sc.created_at,
               r.room_name,
               r.price
        FROM shopping_cart sc
                 JOIN room r ON sc.room_id = r.room_id
        WHERE sc.cart_id = #{cartId}
    </select>

    <insert id="insertCartItem" parameterType="com.team2.dto.order.ShoppingCartItemDTO" useGeneratedKeys="true" keyProperty="cartId">
        INSERT INTO shopping_cart (room_id, customer_id, adult_count, child_count, created_at)
        VALUES (#{roomId}, #{customerId}, #{adultCount}, #{childCount}, NOW())
    </insert>

    <delete id="deleteById" parameterType="int">
        DELETE FROM shopping_cart WHERE cart_id = #{cartId}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">
        DELETE FROM shopping_cart WHERE cart_id IN
        <foreach collection="cartIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 회원&객실번호로 중복담기 방지 -->
    <select id="findByCustomerAndRoom" resultType="CartDTO" parameterType="CartDTO" >
        SELECT *
        FROM SHOPPING_CART
        WHERE customer_id = #{customerId}
          AND room_id = #{roomId}
    </select>

    <!-- 장바구니 인원 수정 -->
    <update id="updatePeopleCnt" parameterType="CartDTO">
        UPDATE SHOPPING_CART
        <set>
            <if test="adultCount != null">
                adult_count = #{adultCount},
            </if>
            <if test="childCount != null">
                child_count = #{childCount}
            </if>
        </set>
        WHERE cart_id = #{cartId}
    </update>

    <!-- 회원번호로 찾기 -->
    <select id="findByCustomer" parameterType="int" resultType="CartAddDTO">
        SELECT * FROM shopping_cart
        WHERE customer_id = #{customerId}
        ORDER BY customer_id DESC
    </select>

    <!-- 장바구니 전체 삭제 -->
    <delete id="deleteAllCart">
        DELETE FROM SHOPPING_CART
    </delete>

    <!-- 장바구니 조회 -->
    <select id="getCartList" parameterType="int" resultType="CartResponse">
        SELECT
            s.cart_id,
            s.room_id,
            s.customer_id,
            s.adult_count,
            s.child_count,
            r.price,
            r.accommodation_id,
            r.room_name,
            r.checkin_time,
            r.checkout_time,
            r.standard_capacity,
            r.maximum_capacity
        FROM SHOPPING_CART s
                 JOIN ROOM r on s.room_id = r.room_id
        WHERE s.CUSTOMER_ID = #{customerId}
    </select>

    <!-- 장바구니 삭제-->
    <delete id="deleteCart" parameterType="int">
        DELETE FROM SHOPPING_CART
        WHERE cart_id = #{cartId}
    </delete>

</mapper> 